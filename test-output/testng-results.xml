<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="26" passed="24" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-03-07T19:27:47 IST" name="RESTOperations" finished-at="2024-03-07T19:27:58 IST" duration-ms="11492">
    <groups>
    </groups>
    <test started-at="2024-03-07T19:27:47 IST" name="RduCURD" finished-at="2024-03-07T19:27:58 IST" duration-ms="11492">
      <class name="api.test.RestPWSTest">
        <test-method is-config="true" signature="InputData()[pri:0, instance:api.test.RestPWSTest@3315d2d7]" started-at="2024-03-07T19:27:47 IST" name="InputData" finished-at="2024-03-07T19:27:47 IST" duration-ms="601" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InputData -->
        <test-method signature="testAddRdu()[pri:1, instance:api.test.RestPWSTest@3315d2d7]" started-at="2024-03-07T19:27:47 IST" name="testAddRdu" finished-at="2024-03-07T19:27:50 IST" duration-ms="2699" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddRdu -->
        <test-method signature="testGetRdu()[pri:2, instance:api.test.RestPWSTest@3315d2d7]" started-at="2024-03-07T19:27:50 IST" name="testGetRdu" finished-at="2024-03-07T19:27:51 IST" duration-ms="316" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetRdu -->
        <test-method signature="testUpdateRdu()[pri:3, instance:api.test.RestPWSTest@3315d2d7]" started-at="2024-03-07T19:27:51 IST" name="testUpdateRdu" finished-at="2024-03-07T19:27:51 IST" duration-ms="466" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateRdu -->
        <test-method signature="testDeleteRdu()[pri:4, instance:api.test.RestPWSTest@3315d2d7]" started-at="2024-03-07T19:27:51 IST" name="testDeleteRdu" finished-at="2024-03-07T19:27:51 IST" duration-ms="182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteRdu -->
      </class> <!-- api.test.RestPWSTest -->
      <class name="api.test.ServerOperationTest">
        <test-method is-config="true" signature="CSInputData()[pri:0, instance:api.test.ServerOperationTest@503d687a]" started-at="2024-03-07T19:27:54 IST" name="CSInputData" finished-at="2024-03-07T19:27:54 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CSInputData -->
        <test-method is-config="true" signature="ServerInputdatas()[pri:0, instance:api.test.ServerOperationTest@503d687a]" started-at="2024-03-07T19:27:54 IST" name="ServerInputdatas" finished-at="2024-03-07T19:27:54 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ServerInputdatas -->
        <test-method signature="testCreateSession()[pri:1, instance:api.test.ServerOperationTest@503d687a]" started-at="2024-03-07T19:27:54 IST" name="testCreateSession" finished-at="2024-03-07T19:27:54 IST" duration-ms="245" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateSession -->
        <test-method is-config="true" signature="ServerInputdatas()[pri:0, instance:api.test.ServerOperationTest@503d687a]" started-at="2024-03-07T19:27:54 IST" name="ServerInputdatas" finished-at="2024-03-07T19:27:54 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ServerInputdatas -->
        <test-method signature="testGetAllCnrs()[pri:2, instance:api.test.ServerOperationTest@503d687a]" started-at="2024-03-07T19:27:54 IST" name="testGetAllCnrs" finished-at="2024-03-07T19:27:54 IST" duration-ms="392" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllCnrs -->
        <test-method is-config="true" signature="ServerInputdatas()[pri:0, instance:api.test.ServerOperationTest@503d687a]" started-at="2024-03-07T19:27:54 IST" name="ServerInputdatas" finished-at="2024-03-07T19:27:54 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ServerInputdatas -->
        <test-method signature="testGetAllDpes()[pri:3, instance:api.test.ServerOperationTest@503d687a]" started-at="2024-03-07T19:27:54 IST" name="testGetAllDpes" finished-at="2024-03-07T19:27:55 IST" duration-ms="216" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllDpes -->
        <test-method is-config="true" signature="ServerInputdatas()[pri:0, instance:api.test.ServerOperationTest@503d687a]" started-at="2024-03-07T19:27:55 IST" name="ServerInputdatas" finished-at="2024-03-07T19:27:55 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ServerInputdatas -->
        <test-method signature="testgetAllProvGrps()[pri:4, instance:api.test.ServerOperationTest@503d687a]" started-at="2024-03-07T19:27:55 IST" name="testgetAllProvGrps" finished-at="2024-03-07T19:27:55 IST" duration-ms="262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testgetAllProvGrps -->
        <test-method is-config="true" signature="ServerInputdatas()[pri:0, instance:api.test.ServerOperationTest@503d687a]" started-at="2024-03-07T19:27:55 IST" name="ServerInputdatas" finished-at="2024-03-07T19:27:55 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ServerInputdatas -->
        <test-method signature="testgetCNRDetails()[pri:5, instance:api.test.ServerOperationTest@503d687a]" started-at="2024-03-07T19:27:55 IST" name="testgetCNRDetails" finished-at="2024-03-07T19:27:55 IST" duration-ms="231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testgetCNRDetails -->
        <test-method is-config="true" signature="ServerInputdatas()[pri:0, instance:api.test.ServerOperationTest@503d687a]" started-at="2024-03-07T19:27:55 IST" name="ServerInputdatas" finished-at="2024-03-07T19:27:55 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ServerInputdatas -->
        <test-method signature="testgetDefaults()[pri:6, instance:api.test.ServerOperationTest@503d687a]" started-at="2024-03-07T19:27:55 IST" name="testgetDefaults" finished-at="2024-03-07T19:27:55 IST" duration-ms="208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testgetDefaults -->
        <test-method is-config="true" signature="ServerInputdatas()[pri:0, instance:api.test.ServerOperationTest@503d687a]" started-at="2024-03-07T19:27:55 IST" name="ServerInputdatas" finished-at="2024-03-07T19:27:55 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ServerInputdatas -->
        <test-method signature="testgetDPEDefaults()[pri:7, instance:api.test.ServerOperationTest@503d687a]" started-at="2024-03-07T19:27:55 IST" name="testgetDPEDefaults" finished-at="2024-03-07T19:27:56 IST" duration-ms="209" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [404]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [404]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1419)
at org.testng.Assert.assertEquals(Assert.java:1383)
at org.testng.Assert.assertEquals(Assert.java:1429)
at api.test.ServerOperationTest.testgetDPEDefaults(ServerOperationTest.java:132)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testgetDPEDefaults -->
        <test-method is-config="true" signature="ServerInputdatas()[pri:0, instance:api.test.ServerOperationTest@503d687a]" started-at="2024-03-07T19:27:56 IST" name="ServerInputdatas" finished-at="2024-03-07T19:27:56 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ServerInputdatas -->
        <test-method signature="testgetDPEDetails()[pri:8, instance:api.test.ServerOperationTest@503d687a]" started-at="2024-03-07T19:27:56 IST" name="testgetDPEDetails" finished-at="2024-03-07T19:27:56 IST" duration-ms="217" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [404]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [404]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1419)
at org.testng.Assert.assertEquals(Assert.java:1383)
at org.testng.Assert.assertEquals(Assert.java:1429)
at api.test.ServerOperationTest.testgetDPEDetails(ServerOperationTest.java:144)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testgetDPEDetails -->
        <test-method is-config="true" signature="ServerInputdatas()[pri:0, instance:api.test.ServerOperationTest@503d687a]" started-at="2024-03-07T19:27:56 IST" name="ServerInputdatas" finished-at="2024-03-07T19:27:56 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ServerInputdatas -->
        <test-method signature="testgetExtenPointSettings()[pri:9, instance:api.test.ServerOperationTest@503d687a]" started-at="2024-03-07T19:27:56 IST" name="testgetExtenPointSettings" finished-at="2024-03-07T19:27:56 IST" duration-ms="156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testgetExtenPointSettings -->
        <test-method is-config="true" signature="ServerInputdatas()[pri:0, instance:api.test.ServerOperationTest@503d687a]" started-at="2024-03-07T19:27:56 IST" name="ServerInputdatas" finished-at="2024-03-07T19:27:56 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ServerInputdatas -->
        <test-method signature="testchangeDetafuls()[pri:10, instance:api.test.ServerOperationTest@503d687a]" started-at="2024-03-07T19:27:56 IST" name="testchangeDetafuls" finished-at="2024-03-07T19:27:56 IST" duration-ms="296" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testchangeDetafuls -->
        <test-method is-config="true" signature="ServerInputdatas()[pri:0, instance:api.test.ServerOperationTest@503d687a]" started-at="2024-03-07T19:27:56 IST" name="ServerInputdatas" finished-at="2024-03-07T19:27:56 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ServerInputdatas -->
        <test-method signature="testchangeRDUDetafuls()[pri:11, instance:api.test.ServerOperationTest@503d687a]" started-at="2024-03-07T19:27:56 IST" name="testchangeRDUDetafuls" finished-at="2024-03-07T19:27:57 IST" duration-ms="297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testchangeRDUDetafuls -->
      </class> <!-- api.test.ServerOperationTest -->
      <class name="api.test.SearchTest">
        <test-method is-config="true" signature="CSInputData()[pri:0, instance:api.test.SearchTest@6a370f4]" started-at="2024-03-07T19:27:57 IST" name="CSInputData" finished-at="2024-03-07T19:27:57 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CSInputData -->
        <test-method is-config="true" signature="COSInputdatas()[pri:0, instance:api.test.SearchTest@6a370f4]" started-at="2024-03-07T19:27:57 IST" name="COSInputdatas" finished-at="2024-03-07T19:27:57 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- COSInputdatas -->
        <test-method signature="testCreateSession()[pri:1, instance:api.test.SearchTest@6a370f4]" started-at="2024-03-07T19:27:57 IST" name="testCreateSession" finished-at="2024-03-07T19:27:57 IST" duration-ms="229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateSession -->
        <test-method signature="testCOSSearch()[pri:2, instance:api.test.SearchTest@6a370f4]" started-at="2024-03-07T19:27:57 IST" name="testCOSSearch" finished-at="2024-03-07T19:27:57 IST" duration-ms="173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCOSSearch -->
        <test-method is-config="true" signature="COSInputdatas()[pri:0, instance:api.test.SearchTest@6a370f4]" started-at="2024-03-07T19:27:57 IST" name="COSInputdatas" finished-at="2024-03-07T19:27:57 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- COSInputdatas -->
        <test-method is-config="true" signature="COSInputdatas()[pri:0, instance:api.test.SearchTest@6a370f4]" started-at="2024-03-07T19:27:57 IST" name="COSInputdatas" finished-at="2024-03-07T19:27:57 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- COSInputdatas -->
        <test-method signature="testDhcpSearch()[pri:3, instance:api.test.SearchTest@6a370f4]" started-at="2024-03-07T19:27:57 IST" name="testDhcpSearch" finished-at="2024-03-07T19:27:57 IST" duration-ms="320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDhcpSearch -->
        <test-method is-config="true" signature="COSInputdatas()[pri:0, instance:api.test.SearchTest@6a370f4]" started-at="2024-03-07T19:27:57 IST" name="COSInputdatas" finished-at="2024-03-07T19:27:57 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- COSInputdatas -->
        <test-method signature="testFileSearch()[pri:4, instance:api.test.SearchTest@6a370f4]" started-at="2024-03-07T19:27:57 IST" name="testFileSearch" finished-at="2024-03-07T19:27:57 IST" duration-ms="130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFileSearch -->
        <test-method signature="testGroupSearch()[pri:5, instance:api.test.SearchTest@6a370f4]" started-at="2024-03-07T19:27:57 IST" name="testGroupSearch" finished-at="2024-03-07T19:27:58 IST" duration-ms="459" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGroupSearch -->
        <test-method is-config="true" signature="COSInputdatas()[pri:0, instance:api.test.SearchTest@6a370f4]" started-at="2024-03-07T19:27:57 IST" name="COSInputdatas" finished-at="2024-03-07T19:27:57 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- COSInputdatas -->
        <test-method signature="testSearchDevices()[pri:6, instance:api.test.SearchTest@6a370f4]" started-at="2024-03-07T19:27:58 IST" name="testSearchDevices" finished-at="2024-03-07T19:27:58 IST" duration-ms="154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearchDevices -->
        <test-method is-config="true" signature="COSInputdatas()[pri:0, instance:api.test.SearchTest@6a370f4]" started-at="2024-03-07T19:27:58 IST" name="COSInputdatas" finished-at="2024-03-07T19:27:58 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- COSInputdatas -->
      </class> <!-- api.test.SearchTest -->
      <class name="api.test.COSTest">
        <test-method is-config="true" signature="CSInputData()[pri:0, instance:api.test.COSTest@62e7f11d]" started-at="2024-03-07T19:27:51 IST" name="CSInputData" finished-at="2024-03-07T19:27:51 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CSInputData -->
        <test-method is-config="true" signature="COSInputdata()[pri:0, instance:api.test.COSTest@62e7f11d]" started-at="2024-03-07T19:27:51 IST" name="COSInputdata" finished-at="2024-03-07T19:27:51 IST" duration-ms="38" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- COSInputdata -->
        <test-method signature="testCreateSession()[pri:1, instance:api.test.COSTest@62e7f11d]" started-at="2024-03-07T19:27:51 IST" name="testCreateSession" finished-at="2024-03-07T19:27:52 IST" duration-ms="746" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateSession -->
        <test-method is-config="true" signature="COSInputdata()[pri:0, instance:api.test.COSTest@62e7f11d]" started-at="2024-03-07T19:27:52 IST" name="COSInputdata" finished-at="2024-03-07T19:27:52 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- COSInputdata -->
        <test-method signature="testAddCOS()[pri:2, instance:api.test.COSTest@62e7f11d]" started-at="2024-03-07T19:27:52 IST" name="testAddCOS" finished-at="2024-03-07T19:27:52 IST" depends-on-methods="api.test.COSTest.testCreateSession" duration-ms="307" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddCOS -->
        <test-method is-config="true" signature="COSInputdata()[pri:0, instance:api.test.COSTest@62e7f11d]" started-at="2024-03-07T19:27:52 IST" name="COSInputdata" finished-at="2024-03-07T19:27:52 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- COSInputdata -->
        <test-method signature="testGetCOS()[pri:3, instance:api.test.COSTest@62e7f11d]" started-at="2024-03-07T19:27:52 IST" name="testGetCOS" finished-at="2024-03-07T19:27:53 IST" depends-on-methods="api.test.COSTest.testCreateSession" duration-ms="201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCOS -->
        <test-method is-config="true" signature="COSInputdata()[pri:0, instance:api.test.COSTest@62e7f11d]" started-at="2024-03-07T19:27:53 IST" name="COSInputdata" finished-at="2024-03-07T19:27:53 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- COSInputdata -->
        <test-method signature="testUpdateCOS()[pri:4, instance:api.test.COSTest@62e7f11d]" started-at="2024-03-07T19:27:53 IST" name="testUpdateCOS" finished-at="2024-03-07T19:27:53 IST" depends-on-methods="api.test.COSTest.testCreateSession" duration-ms="553" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateCOS -->
        <test-method is-config="true" signature="COSInputdata()[pri:0, instance:api.test.COSTest@62e7f11d]" started-at="2024-03-07T19:27:53 IST" name="COSInputdata" finished-at="2024-03-07T19:27:53 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- COSInputdata -->
        <test-method signature="testDeleteCOS()[pri:5, instance:api.test.COSTest@62e7f11d]" started-at="2024-03-07T19:27:53 IST" name="testDeleteCOS" finished-at="2024-03-07T19:27:54 IST" depends-on-methods="api.test.COSTest.testCreateSession" duration-ms="598" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteCOS -->
      </class> <!-- api.test.COSTest -->
    </test> <!-- RduCURD -->
  </suite> <!-- RESTOperations -->
</testng-results>
